# Start from a Debian image with the latest version of Go installed
# and a workspace (GOPATH) configured at /go.
FROM golang

# Dependencies for packages.
RUN apt-get update && apt-get install -y --no-install-recommends libgcrypt-dev libgpg-error-dev pkg-config cmake && rm -rf /var/lib/apt/lists/*

# Get/build all dependencies.
RUN go get -d github.com/libgit2/git2go
RUN (cd /go/src/github.com/libgit2/git2go && git checkout next && git submodule update --init && make install)
RUN go get -d github.com/mattn/go-sqlite3
RUN go install github.com/mattn/go-sqlite3
RUN go get github.com/go-sql-driver/mysql
RUN go get github.com/inconshreveable/log15
RUN go get github.com/vincent-petithory/dataurl
RUN go get github.com/prometheus/client_golang/prometheus
RUN go get github.com/shirou/gopsutil
RUN go get golang.org/x/net/http2
RUN go get -u github.com/jteeuwen/go-bindata/...
RUN go get github.com/elazarl/go-bindata-assetfs/...

# Copy the local package files to the container's workspace.
ADD . /go/src/github.com/lhchavez/quark

# Build all binaries.
RUN go generate github.com/lhchavez/quark/cmd/...
ENV GOOS linux
RUN go build --ldflags '-extldflags "-static -lgcrypt -lgpg-error"' -o bin/grader github.com/lhchavez/quark/cmd/grader
RUN go build --ldflags '-extldflags "-static"' -o bin/validator github.com/lhchavez/quark/cmd/validator

ENV CGO_ENABLED 0
RUN go build  --ldflags '-extldflags "-static -libc -lpthread"' -o bin/runner github.com/lhchavez/quark/cmd/runner
